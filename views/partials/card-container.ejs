<div>

  <div class="card-container">
    <% if (user) { %>
      <div class="user-id hide"><%= user._id %></div>
    <% } %>

    <%- include('./set-card.ejs') %> 
    <%- include('./card-front.ejs') %>   
    <%- include('./card-back.ejs') %>
  
  </div>

  <button class="flip hide" type="button">Flip</button>
  <button class="go-next-button" type="button">Go!</button>

</div>

<script>
  const userId = document.querySelector('.user-id')
  const setCard = document.querySelector('.set-card')
  const goNextButton = document.querySelector('.go-next-button')
  const flip = document.querySelector('.flip')   
  const cardBacks = document.querySelectorAll('.card-back')
  const cardFronts = document.querySelectorAll('.card-front')
  const editCardButton = document.querySelector('.edit-card')
  const signupMessage = document.querySelector('.signup-message')
  let currentCardId
  let index = 0

  const saveCardInfo = (cardFront, cardBack) => {
    const cardInfoQuestion = cardFront.firstElementChild.innerText
    const cardInfoAnswer = cardBack.firstElementChild.innerText
    currentCardId = cardBack.firstElementChild.nextElementSibling.lastElementChild.previousElementSibling.innerText
    const cardInfoLinks = cardBack.firstElementChild.nextElementSibling.lastElementChild.innerText
    
    const cardInfo = {
      question: cardInfoQuestion,
      answer: cardInfoAnswer,
      cardId: currentCardId,
      links: cardInfoLinks,
    }
    sessionStorage.setItem("storedCardInfo", JSON.stringify(cardInfo))
  }

  goNextButton.addEventListener('click', () => {
    if (goNextButton.innerText === "Go!") {
      if (editCardButton) {
        editCardButton.classList.remove('hide')
      }
      setCard.style.zIndex = "0"
      cardFronts[index].style.zIndex = "1"
      cardBacks[index].style.zIndex = "1"
      saveCardInfo(cardFronts[index], cardBacks[index])
      goNextButton.innerText = "Next"
      flip.classList.remove('hide')
    } else {
      cardBacks.forEach(cardBack => {
        cardBack.classList.add('hide')
      })
      cardFronts.forEach(cardFront => {
        cardFront.classList.remove('hide')
      }) 

     if (index === cardFronts.length - 1) {
      cardFronts[index].style.zIndex = "0"
      cardBacks[index].style.zIndex = "0"
      index = 0
      cardFronts[index].style.zIndex = "1"
      cardBacks[index].style.zIndex = "1"
      saveCardInfo(cardFronts[index], cardBacks[index])
     } else {
      cardFronts[index].style.zIndex = "0"
      cardBacks[index].style.zIndex = "0"
      index += 1
      cardFronts[index].style.zIndex = "1"
      cardBacks[index].style.zIndex = "1"
      saveCardInfo(cardFronts[index], cardBacks[index])
     }
    }
    signupMessage.innerHTML = ''
  })

    flip.addEventListener('click', () => {
      cardBacks.forEach(cardBack => {
        cardBack.classList.remove('hide')
      })
      cardFronts.forEach(cardFront => {
        cardFront.classList.add('hide')
      })
    })

    
  // click handlers for cardBack

  const handleCorrectClick = () => {
    const uId = userId.innerHTML

    fetch('/correct', { 
      method: 'POST',
      headers: {
                "Content-Type": "application/json"
            },
      body: JSON.stringify({ 
        cardId: currentCardId,
        userId: uId
      })
    })
    .then((response) => response.json())
    .catch(err => console.log(err))

    goNextButton.click()
  }
  const handleIncorrectClick = () => {
    const uId = userId.innerHTML

    fetch('/incorrect', { 
      method: 'POST',
      headers: {
                "Content-Type": "application/json"
            },
      body: JSON.stringify({ 
        cardId: currentCardId,
        userId: uId
      })
    })
    .then((response) => response.json())
    .catch(err => console.log(err))
    goNextButton.click()
  }
  
  const handleDisplaySignUpMessage = () => {
    signupMessage.innerHTML = `
      <h3>Signup or Login to use Smart Card capabilities!</h3>
      `
  }
</script>